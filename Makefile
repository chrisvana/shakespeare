# Auto-generated by repobuild, do not modify directly.

# Environment flag settings.
ROOT_DIR := $(shell pwd)
# Some compiler specific flag settings.
CXX_GCC := $(shell echo $$($(CXX) --version | egrep '(gcc|g\+\+)' | head -n 1 | wc -l))
CC_GCC := $(shell echo $$($(CC) --version | egrep '(gcc|g\+\+|^cc)' | head -n 1 | wc -l))
ifeq ($(CC_GCC),1)
	CFLAGS= -pthread -g -Wall -Werror -Wno-sign-compare -Wno-unused-local-typedefs -Wno-error=unused-local-typedefs -O3 -flto
	BASIC_CFLAGS= -pthread
else
	CFLAGS= -stdlib=libc++ -pthread -g -Wall -Werror -Wno-sign-compare -O3 -flto -Qunused-arguments -fcolor-diagnostics
	BASIC_CFLAGS= -stdlib=libc++ -pthread -Qunused-arguments
endif
ifeq ($(CXX_GCC),1)
	LD_FORCE_LINK_START := -Wl,--whole-archive
	LD_FORCE_LINK_END := -Wl,--no-whole-archive
	LDFLAGS= -lpthread -g -O3 -flto -L/usr/local/lib -L/opt/local/lib
	CXXFLAGS= -pthread -g -Wall -Werror -Wno-sign-compare -Wno-unused-local-typedefs -Wno-error=unused-local-typedefs -O3 -flto -std=c++11 -DUSE_CXX0X
	BASIC_CXXFLAGS= -pthread -std=c++11
else
	LD_FORCE_LINK_START := -Wl,-force_load
	LD_FORCE_LINK_END := 
	LDFLAGS= -stdlib=libc++ -lpthread -g -O3 -flto -L/usr/local/lib -L/opt/local/lib
	CXXFLAGS= -stdlib=libc++ -pthread -g -Wall -Werror -Wno-sign-compare -O3 -flto -Qunused-arguments -fcolor-diagnostics -std=c++11 -DUSE_CXX0X
	BASIC_CXXFLAGS= -stdlib=libc++ -pthread -Qunused-arguments -std=c++11
endif

define PythonSetup
aW1wb3J0IG9zCmZyb20gc2V0dXB0b29scyBpbXBvcnQgc2V0dXAKCnNldHVwKAogICAgbmFtZSA9IG9zLmVudmlyb25bJ1BZX05BTUUnXSwKICAgIHZlcnNpb24gPSBvcy5lbnZpcm9uWydQWV9WRVJTSU9OJ10sCiAgICBweV9tb2R1bGVzID0gb3MuZW52aXJvblsnUFlfTU9EVUxFUyddLnNwbGl0KCksCiAgICBpbnN0YWxsX3JlcXVpcmVzID0gb3MuZW52aXJvblsnUFlfU1lTX0RFUFMnXS5zcGxpdCgpLAopCg==
endef
export PythonSetup

.gen-pkg/base_setup.py: 
	@echo "$$PythonSetup" | base64 --decode > .gen-pkg/base_setup.py
	@chmod 0755 .gen-pkg/base_setup.py

define CCEmbed
IyEvYmluL2Jhc2gKSEVBREVSPSIkMSIKQ1BQPSIkMiIKR1VBUkQ9IiQzIgpOQU1FU1BBQ0VfU1RBUlQ9IiQ0IgpOQU1FU1BBQ0VfRU5EPSIkNSIKZWNobyAiI2lmbmRlZiAkR1VBUkQiID4gJEhFQURFUgplY2hvICIjZGVmaW5lICRHVUFSRCIgPj4gJEhFQURFUgplY2hvICIjaW5jbHVkZSA8Y3N0cmluZz4gIC8vIHNpemVfdCIgPj4gJEhFQURFUgplY2hvICIkTkFNRVNQQUNFX1NUQVJUIiA+PiAkSEVBREVSCmVjaG8gIiNpbmNsdWRlIFwiJChiYXNlbmFtZSAkSEVBREVSKVwiIiA+ICRDUFAKZWNobyAiJE5BTUVTUEFDRV9TVEFSVCIgPj4gJENQUAp3aGlsZSByZWFkIFNPVVJDRSBWQVJJQUJMRTsgZG8gIGVjaG8gIi8vIEF1dG8gZ2VuZXJhdGVkIGZyb20gJFNPVVJDRSIgPj4gJEhFQURFUgogIGVjaG8gImV4dGVybiBjb25zdCBjaGFyKiAiJFZBUklBQkxFIl9kYXRhKCk7IiA+PiAkSEVBREVSCiAgZWNobyAiZXh0ZXJuIHNpemVfdCAiJFZBUklBQkxFIl9zaXplKCk7IiA+PiAkSEVBREVSCiAgZWNobyAiIiA+PiAkSEVBREVSCiAgZWNobyAiY29uc3QgY2hhciogIiRWQVJJQUJMRSJfZGF0YSgpIHsiID4+ICRDUFAKICBwcmludGYgIiAgcmV0dXJuIFwiIiA+PiAkQ1BQCiAgY2F0ICRTT1VSQ0UgICAgIHwgcGVybCAtcGUgJ3N8XFx8XFxcXHxnJyAgICAgfCBwZXJsIC1wZSAnc3xcInxcXCJ8ZycgICAgIHwgcGVybCAtcGUgJ3N8XG58XFxufGcnID4+ICRDUFAKICBlY2hvICJcIjsiID4+ICRDUFAKICBlY2hvICJ9IiA+PiAkQ1BQCiAgZWNobyAic2l6ZV90ICIkVkFSSUFCTEUiX3NpemUoKSIgeyA+PiAkQ1BQCiAgcHJpbnRmICIgIHJldHVybiAiID4+ICRDUFAKICBwcmludGYgJChjYXQgJFNPVVJDRSB8IHdjIC1jKSA+PiAkQ1BQCiAgZWNobyAiOyIgPj4gJENQUAogIGVjaG8gIn0iID4+ICRDUFAKZG9uZQplY2hvICIkTkFNRVNQQUNFX0VORCIgPj4gJEhFQURFUgplY2hvICIjZW5kaWYgIC8vICRHVUFSRCIgPj4gJEhFQURFUgplY2hvICIkTkFNRVNQQUNFX0VORCIgPj4gJENQUAo=
endef
export CCEmbed

.gen-files/cc_embed.sh: 
	@echo "$$CCEmbed" | base64 --decode > .gen-files/cc_embed.sh
	@chmod 0755 .gen-files/cc_embed.sh


.gen-src/common: 
	@mkdir -p .gen-src; [ -f common ] || mkdir -p common; ln -f -s ../common .gen-src/common


.gen-src/common/.dummy: .gen-src/common
	@[ -f .gen-src/common/.dummy ] || touch .gen-src/common/.dummy


.gen-src/.gen-pkg/common: 
	@mkdir -p .gen-src/.gen-pkg; [ -f .gen-pkg/common ] || mkdir -p .gen-pkg/common; ln -f -s ../../.gen-pkg/common .gen-src/.gen-pkg/common


.gen-src/.gen-pkg/common/.dummy: .gen-src/.gen-pkg/common
	@[ -f .gen-src/.gen-pkg/common/.dummy ] || touch .gen-src/.gen-pkg/common/.dummy


.gen-src/.gen-files/common: 
	@mkdir -p .gen-src/.gen-files; [ -f .gen-files/common ] || mkdir -p .gen-files/common; ln -f -s ../../.gen-files/common .gen-src/.gen-files/common


.gen-src/.gen-files/common/.dummy: .gen-src/.gen-files/common
	@[ -f .gen-src/.gen-files/common/.dummy ] || touch .gen-src/.gen-files/common/.dummy

common/auto_.0: .gen-src/common .gen-src/.gen-pkg/common .gen-src/.gen-files/common

.PHONY: common/auto_.0

c_compile_args.common/third_party/google/gflags/gflags := 
ifeq ($(CC_GCC),1)
	c_compile_args.common/third_party/google/gflags/gflags := -Wno-error=unused-local-typedefs
endif

c_header_compile_args.common/third_party/google/gflags/gflags := -Icommon/third_party/google/gflags/src

cxx_compile_args.common/third_party/google/gflags/gflags := 
ifeq ($(CXX_GCC),1)
	cxx_compile_args.common/third_party/google/gflags/gflags := -Wno-error=unused-local-typedefs
endif

cxx_header_compile_args.common/third_party/google/gflags/gflags := -Icommon/third_party/google/gflags/src

headers.common/third_party/google/gflags/gflags := common/third_party/google/gflags/src/util.h common/third_party/google/gflags/src/google/gflags.h common/third_party/google/gflags/src/google/gflags_completions.h


.gen-obj/common/third_party/google/gflags/src/gflags.cc.o: .gen-src/common/.dummy .gen-src/.gen-files/common/.dummy .gen-src/.gen-pkg/common/.dummy $(headers.common/third_party/google/gflags/gflags) common/third_party/google/gflags/src/gflags.cc
	@mkdir -p .gen-obj/common/third_party/google/gflags/src
	@echo "Compiling:  common/third_party/google/gflags/src/gflags.cc (c++)"
	@$(COMPILE.cc) -I. -I.gen-files -I.gen-src -I.gen-src/.gen-files $(cxx_header_compile_args.common/third_party/google/gflags/gflags) $(cxx_compile_args.common/third_party/google/gflags/gflags) common/third_party/google/gflags/src/gflags.cc -o .gen-obj/common/third_party/google/gflags/src/gflags.cc.o


.gen-obj/common/third_party/google/gflags/src/gflags_completions.cc.o: .gen-src/common/.dummy .gen-src/.gen-files/common/.dummy .gen-src/.gen-pkg/common/.dummy $(headers.common/third_party/google/gflags/gflags) common/third_party/google/gflags/src/gflags_completions.cc
	@mkdir -p .gen-obj/common/third_party/google/gflags/src
	@echo "Compiling:  common/third_party/google/gflags/src/gflags_completions.cc (c++)"
	@$(COMPILE.cc) -I. -I.gen-files -I.gen-src -I.gen-src/.gen-files $(cxx_header_compile_args.common/third_party/google/gflags/gflags) $(cxx_compile_args.common/third_party/google/gflags/gflags) common/third_party/google/gflags/src/gflags_completions.cc -o .gen-obj/common/third_party/google/gflags/src/gflags_completions.cc.o


.gen-obj/common/third_party/google/gflags/src/gflags_nc.cc.o: .gen-src/common/.dummy .gen-src/.gen-files/common/.dummy .gen-src/.gen-pkg/common/.dummy $(headers.common/third_party/google/gflags/gflags) common/third_party/google/gflags/src/gflags_nc.cc
	@mkdir -p .gen-obj/common/third_party/google/gflags/src
	@echo "Compiling:  common/third_party/google/gflags/src/gflags_nc.cc (c++)"
	@$(COMPILE.cc) -I. -I.gen-files -I.gen-src -I.gen-src/.gen-files $(cxx_header_compile_args.common/third_party/google/gflags/gflags) $(cxx_compile_args.common/third_party/google/gflags/gflags) common/third_party/google/gflags/src/gflags_nc.cc -o .gen-obj/common/third_party/google/gflags/src/gflags_nc.cc.o


.gen-obj/common/third_party/google/gflags/src/gflags_reporting.cc.o: .gen-src/common/.dummy .gen-src/.gen-files/common/.dummy .gen-src/.gen-pkg/common/.dummy $(headers.common/third_party/google/gflags/gflags) common/third_party/google/gflags/src/gflags_reporting.cc
	@mkdir -p .gen-obj/common/third_party/google/gflags/src
	@echo "Compiling:  common/third_party/google/gflags/src/gflags_reporting.cc (c++)"
	@$(COMPILE.cc) -I. -I.gen-files -I.gen-src -I.gen-src/.gen-files $(cxx_header_compile_args.common/third_party/google/gflags/gflags) $(cxx_compile_args.common/third_party/google/gflags/gflags) common/third_party/google/gflags/src/gflags_reporting.cc -o .gen-obj/common/third_party/google/gflags/src/gflags_reporting.cc.o

common/third_party/google/gflags/gflags: .gen-obj/common/third_party/google/gflags/src/gflags.cc.o .gen-obj/common/third_party/google/gflags/src/gflags_completions.cc.o .gen-obj/common/third_party/google/gflags/src/gflags_nc.cc.o .gen-obj/common/third_party/google/gflags/src/gflags_reporting.cc.o common/auto_.0

.PHONY: common/third_party/google/gflags/gflags


.gen-obj/common/third_party/google/gperftools/.perf_gen.0.dummy: .gen-src/common/.dummy .gen-src/.gen-files/common/.dummy .gen-src/.gen-pkg/common/.dummy $(headers.common/third_party/google/gflags/gflags) .gen-obj/common/third_party/google/gflags/src/gflags.cc.o .gen-obj/common/third_party/google/gflags/src/gflags_completions.cc.o .gen-obj/common/third_party/google/gflags/src/gflags_nc.cc.o .gen-obj/common/third_party/google/gflags/src/gflags_reporting.cc.o
	@echo "Autoconf:   //common/third_party/google/gperftools:perf_gen.0"
	@(mkdir -p .gen-files/common/third_party/google/gperftools; cd common/third_party/google/gperftools; GEN_DIR="../../../../.gen-files/common/third_party/google/gperftools" OBJ_DIR="../../../../.gen-obj/common/third_party/google/gperftools SRC_DIR="../../../../.gen-src/common/third_party/google/gperftools ROOT_DIR="$(ROOT_DIR)"  CXX_GCC="$(CXX_GCC)" CC_GCC="$(CC_GCC)" CC="$(CC)" CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" BASIC_CXXFLAGS="$(BASIC_CXXFLAGS)" CFLAGS="$(CFLAGS)" BASIC_CFLAGS="$(BASIC_CFLAGS)" LDFLAGS="$(LDFLAGS)" MAKE="$(MAKE)" GFLAGS_OBJS=".gen-obj/common/third_party/google/gflags/src/*.o" GFLAGS_SRC_ROOT="common/third_party/google/gflags/src" DEP_CXXFLAGS="$(cxx_header_compile_args.common/third_party/google/gflags/gflags)" DEP_CFLAGS="$(c_header_compile_args.common/third_party/google/gflags/gflags)" eval '(mkdir -p $$OBJ_DIR; DEST_DIR=$$(pwd)/$$GEN_DIR; USER_CXXFLAGS=-msse4; CXXFLAGS="$$BASIC_CXXFLAGS $$DEP_FLAGS $$USER_CXXFLAGS" CFLAGS="$$BASIC_CFLAGS $$DEP_FLAGS $$USER_CFLAGS" LDFLAGS="$$LDFLAGS $$USER_LDFLAGS" CC="$$CC" CXX="$$CXX" ./configure --prefix=/ --cache-file=$$GEN_DIR/config.cache --with-gflagssrc="$$ROOT_DIR/$$GFLAGS_SRC_ROOT" --with-gflagslib="$$ROOT_DIR/$$GFLAGS_OBJS")' > ../../../../.gen-files/common/third_party/google/gperftools/.perf_gen.0.logfile 2>&1 || (cat ../../../../.gen-files/common/third_party/google/gperftools/.perf_gen.0.logfile; exit 1) ) && (mkdir -p .gen-obj/common/third_party/google/gperftools; touch .gen-obj/common/third_party/google/gperftools/.perf_gen.0.dummy)

common/third_party/google/gperftools/perf_gen.0: .gen-obj/common/third_party/google/gperftools/.perf_gen.0.dummy common/third_party/google/gflags/gflags common/auto_.0

.PHONY: common/third_party/google/gperftools/perf_gen.0


.gen-obj/common/third_party/google/gperftools/.perf_gen.1.0.dummy: .gen-obj/common/third_party/google/gperftools/.perf_gen.0.dummy .gen-src/common/.dummy .gen-src/.gen-files/common/.dummy .gen-src/.gen-pkg/common/.dummy $(headers.common/third_party/google/gflags/gflags) .gen-obj/common/third_party/google/gflags/src/gflags.cc.o .gen-obj/common/third_party/google/gflags/src/gflags_completions.cc.o .gen-obj/common/third_party/google/gflags/src/gflags_nc.cc.o .gen-obj/common/third_party/google/gflags/src/gflags_reporting.cc.o
	@echo "Make:       //common/third_party/google/gperftools:perf_gen.1.0"
	@(mkdir -p .gen-files/common/third_party/google/gperftools; cd common/third_party/google/gperftools; GEN_DIR="../../../../.gen-files/common/third_party/google/gperftools" OBJ_DIR="../../../../.gen-obj/common/third_party/google/gperftools SRC_DIR="../../../../.gen-src/common/third_party/google/gperftools ROOT_DIR="$(ROOT_DIR)"  CXX_GCC="$(CXX_GCC)" CC_GCC="$(CC_GCC)" CC="$(CC)" CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" BASIC_CXXFLAGS="$(BASIC_CXXFLAGS)" CFLAGS="$(CFLAGS)" BASIC_CFLAGS="$(BASIC_CFLAGS)" LDFLAGS="$(LDFLAGS)" MAKE="$(MAKE)" GFLAGS_OBJS=".gen-obj/common/third_party/google/gflags/src/*.o" GFLAGS_SRC_ROOT="common/third_party/google/gflags/src" DEP_CXXFLAGS="$(cxx_header_compile_args.common/third_party/google/gflags/gflags)" DEP_CFLAGS="$(c_header_compile_args.common/third_party/google/gflags/gflags)" eval '($$MAKE install DESTDIR=$$(pwd)/$$GEN_DIR)' > ../../../../.gen-files/common/third_party/google/gperftools/.perf_gen.1.0.logfile 2>&1 || (cat ../../../../.gen-files/common/third_party/google/gperftools/.perf_gen.1.0.logfile; exit 1) ) && (mkdir -p .gen-obj/common/third_party/google/gperftools; touch .gen-obj/common/third_party/google/gperftools/.perf_gen.1.0.dummy)

common/third_party/google/gperftools/perf_gen.1.0: .gen-obj/common/third_party/google/gperftools/.perf_gen.1.0.dummy common/third_party/google/gperftools/perf_gen.0 common/third_party/google/gflags/gflags common/auto_.0

.PHONY: common/third_party/google/gperftools/perf_gen.1.0


.gen-files/common/third_party/google/gperftools/lib/libprofiler.a: .gen-obj/common/third_party/google/gperftools/.perf_gen.1.0.dummy


.gen-files/common/third_party/google/gperftools/lib/libtcmalloc_and_profiler.a: .gen-obj/common/third_party/google/gperftools/.perf_gen.1.0.dummy


.gen-files/common/third_party/google/gperftools/lib/libtcmalloc_minimal.a: .gen-obj/common/third_party/google/gperftools/.perf_gen.1.0.dummy


.gen-files/common/third_party/google/gperftools/lib/libtcmalloc.a: .gen-obj/common/third_party/google/gperftools/.perf_gen.1.0.dummy


.gen-files/common/third_party/google/gperftools/lib/libtcmalloc_debug.a: .gen-obj/common/third_party/google/gperftools/.perf_gen.1.0.dummy


.gen-files/common/third_party/google/gperftools/lib/libtcmalloc_minimal_debug.a: .gen-obj/common/third_party/google/gperftools/.perf_gen.1.0.dummy

common/third_party/google/gperftools/perf_gen.1: common/third_party/google/gperftools/perf_gen.0 common/third_party/google/gflags/gflags common/third_party/google/gperftools/perf_gen.1.0 common/auto_.0

.PHONY: common/third_party/google/gperftools/perf_gen.1

common/third_party/google/gperftools/perf_gen: common/third_party/google/gflags/gflags common/third_party/google/gperftools/perf_gen.0 common/third_party/google/gperftools/perf_gen.1 common/auto_.0

.PHONY: common/third_party/google/gperftools/perf_gen

headers.common/third_party/google/gperftools/atomicops := common/third_party/google/gperftools/src/base/atomicops.h

common/third_party/google/gperftools/atomicops: common/third_party/google/gperftools/perf_gen common/auto_.0

.PHONY: common/third_party/google/gperftools/atomicops

headers.common/base/atomicops := common/base/atomicops.h

common/base/atomicops: common/third_party/google/gperftools/atomicops common/auto_.0

.PHONY: common/base/atomicops

headers.common/base/flags := common/base/flags.h

common/base/flags: common/third_party/google/gflags/gflags common/auto_.0

.PHONY: common/base/flags


.gen-obj/common/third_party/google/glog/.glog_gen.0.dummy: .gen-src/common/.dummy .gen-src/.gen-files/common/.dummy .gen-src/.gen-pkg/common/.dummy $(headers.common/third_party/google/gflags/gflags) .gen-obj/common/third_party/google/gflags/src/gflags.cc.o .gen-obj/common/third_party/google/gflags/src/gflags_completions.cc.o .gen-obj/common/third_party/google/gflags/src/gflags_nc.cc.o .gen-obj/common/third_party/google/gflags/src/gflags_reporting.cc.o
	@echo "Autoconf:   //common/third_party/google/glog:glog_gen.0"
	@(mkdir -p .gen-files/common/third_party/google/glog; cd common/third_party/google/glog; GEN_DIR="../../../../.gen-files/common/third_party/google/glog" OBJ_DIR="../../../../.gen-obj/common/third_party/google/glog SRC_DIR="../../../../.gen-src/common/third_party/google/glog ROOT_DIR="$(ROOT_DIR)"  CXX_GCC="$(CXX_GCC)" CC_GCC="$(CC_GCC)" CC="$(CC)" CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" BASIC_CXXFLAGS="$(BASIC_CXXFLAGS)" CFLAGS="$(CFLAGS)" BASIC_CFLAGS="$(BASIC_CFLAGS)" LDFLAGS="$(LDFLAGS)" MAKE="$(MAKE)" GFLAGS_OBJS=".gen-obj/common/third_party/google/gflags/src/*.o" GFLAGS_SRC_ROOT="common/third_party/google/gflags/src" DEP_CXXFLAGS="$(cxx_header_compile_args.common/third_party/google/gflags/gflags)" DEP_CFLAGS="$(c_header_compile_args.common/third_party/google/gflags/gflags)" eval '(mkdir -p $$OBJ_DIR; DEST_DIR=$$(pwd)/$$GEN_DIR; CXXFLAGS="$$BASIC_CXXFLAGS $$DEP_FLAGS $$USER_CXXFLAGS" CFLAGS="$$BASIC_CFLAGS $$DEP_FLAGS $$USER_CFLAGS" LDFLAGS="$$LDFLAGS $$USER_LDFLAGS" CC="$$CC" CXX="$$CXX" ./configure --prefix=/ --cache-file=$$GEN_DIR/config.cache --with-gflagssrc="$$ROOT_DIR/$$GFLAGS_SRC_ROOT" --with-gflagslib="$$ROOT_DIR/$$GFLAGS_OBJS")' > ../../../../.gen-files/common/third_party/google/glog/.glog_gen.0.logfile 2>&1 || (cat ../../../../.gen-files/common/third_party/google/glog/.glog_gen.0.logfile; exit 1) ) && (mkdir -p .gen-obj/common/third_party/google/glog; touch .gen-obj/common/third_party/google/glog/.glog_gen.0.dummy)

common/third_party/google/glog/glog_gen.0: .gen-obj/common/third_party/google/glog/.glog_gen.0.dummy common/third_party/google/gflags/gflags common/auto_.0

.PHONY: common/third_party/google/glog/glog_gen.0


.gen-obj/common/third_party/google/glog/.glog_gen.1.0.dummy: .gen-obj/common/third_party/google/glog/.glog_gen.0.dummy .gen-src/common/.dummy .gen-src/.gen-files/common/.dummy .gen-src/.gen-pkg/common/.dummy $(headers.common/third_party/google/gflags/gflags) .gen-obj/common/third_party/google/gflags/src/gflags.cc.o .gen-obj/common/third_party/google/gflags/src/gflags_completions.cc.o .gen-obj/common/third_party/google/gflags/src/gflags_nc.cc.o .gen-obj/common/third_party/google/gflags/src/gflags_reporting.cc.o
	@echo "Make:       //common/third_party/google/glog:glog_gen.1.0"
	@(mkdir -p .gen-files/common/third_party/google/glog; cd common/third_party/google/glog; GEN_DIR="../../../../.gen-files/common/third_party/google/glog" OBJ_DIR="../../../../.gen-obj/common/third_party/google/glog SRC_DIR="../../../../.gen-src/common/third_party/google/glog ROOT_DIR="$(ROOT_DIR)"  CXX_GCC="$(CXX_GCC)" CC_GCC="$(CC_GCC)" CC="$(CC)" CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" BASIC_CXXFLAGS="$(BASIC_CXXFLAGS)" CFLAGS="$(CFLAGS)" BASIC_CFLAGS="$(BASIC_CFLAGS)" LDFLAGS="$(LDFLAGS)" MAKE="$(MAKE)" GFLAGS_OBJS=".gen-obj/common/third_party/google/gflags/src/*.o" GFLAGS_SRC_ROOT="common/third_party/google/gflags/src" DEP_CXXFLAGS="$(cxx_header_compile_args.common/third_party/google/gflags/gflags)" DEP_CFLAGS="$(c_header_compile_args.common/third_party/google/gflags/gflags)" eval '($$MAKE install DESTDIR=$$(pwd)/$$GEN_DIR)' > ../../../../.gen-files/common/third_party/google/glog/.glog_gen.1.0.logfile 2>&1 || (cat ../../../../.gen-files/common/third_party/google/glog/.glog_gen.1.0.logfile; exit 1) ) && (mkdir -p .gen-obj/common/third_party/google/glog; touch .gen-obj/common/third_party/google/glog/.glog_gen.1.0.dummy)

common/third_party/google/glog/glog_gen.1.0: .gen-obj/common/third_party/google/glog/.glog_gen.1.0.dummy common/third_party/google/glog/glog_gen.0 common/third_party/google/gflags/gflags common/auto_.0

.PHONY: common/third_party/google/glog/glog_gen.1.0


.gen-files/common/third_party/google/glog/lib/libglog.a: .gen-obj/common/third_party/google/glog/.glog_gen.1.0.dummy

common/third_party/google/glog/glog_gen.1: common/third_party/google/glog/glog_gen.0 common/third_party/google/gflags/gflags common/third_party/google/glog/glog_gen.1.0 common/auto_.0

.PHONY: common/third_party/google/glog/glog_gen.1

common/third_party/google/glog/glog_gen: common/third_party/google/gflags/gflags common/third_party/google/glog/glog_gen.0 common/third_party/google/glog/glog_gen.1 common/auto_.0

.PHONY: common/third_party/google/glog/glog_gen

common/third_party/google/glog/glog: common/third_party/google/glog/glog_gen common/auto_.0

.PHONY: common/third_party/google/glog/glog

headers.common/log/log := common/log/log.h

common/log/log: common/third_party/google/glog/glog common/auto_.0

.PHONY: common/log/log

headers.common/third_party/google/init/init := common/third_party/google/init/googleinit.h

common/third_party/google/init/init: common/auto_.0

.PHONY: common/third_party/google/init/init

headers.common/base/init := common/base/init.h


.gen-obj/common/base/init.cc.o: .gen-src/common/.dummy .gen-src/.gen-files/common/.dummy .gen-src/.gen-pkg/common/.dummy $(headers.common/third_party/google/gflags/gflags) .gen-obj/common/third_party/google/glog/.glog_gen.0.dummy .gen-obj/common/third_party/google/glog/.glog_gen.1.0.dummy $(headers.common/log/log) $(headers.common/third_party/google/init/init) $(headers.common/base/flags) $(headers.common/base/init) common/base/init.cc
	@mkdir -p .gen-obj/common/base
	@echo "Compiling:  common/base/init.cc (c++)"
	@$(COMPILE.cc) -I. -I.gen-files -I.gen-src -I.gen-src/.gen-files -Icommon/third_party/google/glog/src $(cxx_header_compile_args.common/third_party/google/gflags/gflags) common/base/init.cc -o .gen-obj/common/base/init.cc.o

common/base/init: .gen-obj/common/base/init.cc.o common/log/log common/third_party/google/init/init common/base/flags common/auto_.0

.PHONY: common/base/init

headers.common/base/macros := common/base/macros.h

common/base/macros: common/auto_.0

.PHONY: common/base/macros

headers.common/base/mutex := common/base/mutex.h

common/base/mutex: common/auto_.0

.PHONY: common/base/mutex

headers.common/base/time := common/base/time.h common/base/rdtsc.h


.gen-obj/common/base/time.cc.o: .gen-src/common/.dummy .gen-src/.gen-files/common/.dummy .gen-src/.gen-pkg/common/.dummy $(headers.common/base/time) common/base/time.cc
	@mkdir -p .gen-obj/common/base
	@echo "Compiling:  common/base/time.cc (c++)"
	@$(COMPILE.cc) -I. -I.gen-files -I.gen-src -I.gen-src/.gen-files common/base/time.cc -o .gen-obj/common/base/time.cc.o

common/base/time: .gen-obj/common/base/time.cc.o common/auto_.0

.PHONY: common/base/time

headers.common/base/types := common/base/types.h

common/base/types: common/auto_.0

.PHONY: common/base/types

common/base/base_nomalloc: common/base/atomicops common/base/flags common/base/init common/base/macros common/base/mutex common/base/time common/base/types common/auto_.0

.PHONY: common/base/base_nomalloc

common/third_party/google/gperftools/libtcmalloc_and_profiler: common/third_party/google/gperftools/perf_gen common/auto_.0

.PHONY: common/third_party/google/gperftools/libtcmalloc_and_profiler

common/base/tcmalloc_perf: common/third_party/google/gperftools/libtcmalloc_and_profiler common/auto_.0

.PHONY: common/base/tcmalloc_perf

common/base/base: common/base/base_nomalloc common/base/tcmalloc_perf common/auto_.0

.PHONY: common/base/base

headers.common/file/fileutil := common/file/fileutil.h


.gen-obj/common/file/fileutil.cc.o: .gen-src/common/.dummy .gen-src/.gen-files/common/.dummy .gen-src/.gen-pkg/common/.dummy $(headers.common/third_party/google/gflags/gflags) .gen-obj/common/third_party/google/glog/.glog_gen.0.dummy .gen-obj/common/third_party/google/glog/.glog_gen.1.0.dummy $(headers.common/log/log) $(headers.common/file/fileutil) common/file/fileutil.cc
	@mkdir -p .gen-obj/common/file
	@echo "Compiling:  common/file/fileutil.cc (c++)"
	@$(COMPILE.cc) -I. -I.gen-files -I.gen-src -I.gen-src/.gen-files -Icommon/third_party/google/glog/src $(cxx_header_compile_args.common/third_party/google/gflags/gflags) common/file/fileutil.cc -o .gen-obj/common/file/fileutil.cc.o

common/file/fileutil: .gen-obj/common/file/fileutil.cc.o common/log/log common/auto_.0

.PHONY: common/file/fileutil

headers.common/file/linereader := common/file/linereader.h


.gen-obj/common/file/linereader.cc.o: .gen-src/common/.dummy .gen-src/.gen-files/common/.dummy .gen-src/.gen-pkg/common/.dummy $(headers.common/third_party/google/gflags/gflags) .gen-obj/common/third_party/google/glog/.glog_gen.0.dummy .gen-obj/common/third_party/google/glog/.glog_gen.1.0.dummy $(headers.common/log/log) $(headers.common/file/linereader) common/file/linereader.cc
	@mkdir -p .gen-obj/common/file
	@echo "Compiling:  common/file/linereader.cc (c++)"
	@$(COMPILE.cc) -I. -I.gen-files -I.gen-src -I.gen-src/.gen-files -Icommon/third_party/google/glog/src $(cxx_header_compile_args.common/third_party/google/gflags/gflags) common/file/linereader.cc -o .gen-obj/common/file/linereader.cc.o

common/file/linereader: .gen-obj/common/file/linereader.cc.o common/log/log common/auto_.0

.PHONY: common/file/linereader


.gen-src/third_party: 
	@mkdir -p .gen-src; [ -f third_party ] || mkdir -p third_party; ln -f -s ../third_party .gen-src/third_party


.gen-src/third_party/.dummy: .gen-src/third_party
	@[ -f .gen-src/third_party/.dummy ] || touch .gen-src/third_party/.dummy


.gen-src/.gen-pkg/third_party: 
	@mkdir -p .gen-src/.gen-pkg; [ -f .gen-pkg/third_party ] || mkdir -p .gen-pkg/third_party; ln -f -s ../../.gen-pkg/third_party .gen-src/.gen-pkg/third_party


.gen-src/.gen-pkg/third_party/.dummy: .gen-src/.gen-pkg/third_party
	@[ -f .gen-src/.gen-pkg/third_party/.dummy ] || touch .gen-src/.gen-pkg/third_party/.dummy


.gen-src/.gen-files/third_party: 
	@mkdir -p .gen-src/.gen-files; [ -f .gen-files/third_party ] || mkdir -p .gen-files/third_party; ln -f -s ../../.gen-files/third_party .gen-src/.gen-files/third_party


.gen-src/.gen-files/third_party/.dummy: .gen-src/.gen-files/third_party
	@[ -f .gen-src/.gen-files/third_party/.dummy ] || touch .gen-src/.gen-files/third_party/.dummy

third_party/auto_.0: .gen-src/third_party .gen-src/.gen-pkg/third_party .gen-src/.gen-files/third_party

.PHONY: third_party/auto_.0


.gen-src/boost: 
	@mkdir -p .gen-src; [ -f third_party/boost/boost ] || mkdir -p third_party/boost/boost; ln -f -s ../third_party/boost/boost .gen-src/boost


.gen-src/boost/.dummy: .gen-src/boost
	@[ -f .gen-src/boost/.dummy ] || touch .gen-src/boost/.dummy


.gen-src/.gen-pkg/boost: 
	@mkdir -p .gen-src/.gen-pkg; [ -f .gen-pkg/third_party/boost/boost ] || mkdir -p .gen-pkg/third_party/boost/boost; ln -f -s ../../.gen-pkg/third_party/boost/boost .gen-src/.gen-pkg/boost


.gen-src/.gen-pkg/boost/.dummy: .gen-src/.gen-pkg/boost
	@[ -f .gen-src/.gen-pkg/boost/.dummy ] || touch .gen-src/.gen-pkg/boost/.dummy


.gen-src/.gen-files/boost: 
	@mkdir -p .gen-src/.gen-files; [ -f .gen-files/third_party/boost/boost ] || mkdir -p .gen-files/third_party/boost/boost; ln -f -s ../../.gen-files/third_party/boost/boost .gen-src/.gen-files/boost


.gen-src/.gen-files/boost/.dummy: .gen-src/.gen-files/boost
	@[ -f .gen-src/.gen-files/boost/.dummy ] || touch .gen-src/.gen-files/boost/.dummy

third_party/boost/auto_.0: .gen-src/boost .gen-src/.gen-pkg/boost .gen-src/.gen-files/boost third_party/auto_.0

.PHONY: third_party/boost/auto_.0


.gen-obj/third_party/boost/.boost_gen.dummy: .gen-src/third_party/.dummy .gen-src/.gen-files/third_party/.dummy .gen-src/.gen-pkg/third_party/.dummy .gen-src/boost/.dummy .gen-src/.gen-files/boost/.dummy .gen-src/.gen-pkg/boost/.dummy
	@echo "Script:     //third_party/boost:boost_gen"
	@(mkdir -p .gen-files/third_party/boost; cd third_party/boost; GEN_DIR="../../.gen-files/third_party/boost" OBJ_DIR="../../.gen-obj/third_party/boost SRC_DIR="../../.gen-src/third_party/boost ROOT_DIR="$(ROOT_DIR)"  CXX_GCC="$(CXX_GCC)" CC_GCC="$(CC_GCC)" CC="$(CC)" CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" BASIC_CXXFLAGS="$(BASIC_CXXFLAGS)" CFLAGS="$(CFLAGS)" BASIC_CFLAGS="$(BASIC_CFLAGS)" LDFLAGS="$(LDFLAGS)" MAKE="$(MAKE)" BOOST_INCLUDEDIR="third_party/boost" BOOST_LIBDIR=".gen-files/third_party/boost/lib" BOOST_ROOT=".gen-files/third_party/boost" DEP_CXXFLAGS="" DEP_CFLAGS="" eval '(toolset="clang"; [ "$$CXX_GCC" = 1 ] && toolset=gcc; ./bootstrap.sh && ./b2 toolset="$$toolset" cflags="-O3 $$BASIC_CFLAGS" cxxflags="-O3 $$BASIC_CXXFLAGS" threading=multi linkflags="$$LDFLAGS" -j8 --stagedir="../../.gen-files/third_party/boost" && ([ ! -e ../../.gen-files/third_party/boost/include ] && ln -f -s $$(pwd) ../../.gen-files/third_party/boost/include || echo -n ''))' > ../../.gen-files/third_party/boost/.boost_gen.logfile 2>&1 || (cat ../../.gen-files/third_party/boost/.boost_gen.logfile; exit 1) ) && (mkdir -p .gen-obj/third_party/boost; touch .gen-obj/third_party/boost/.boost_gen.dummy)

third_party/boost/boost_gen: .gen-obj/third_party/boost/.boost_gen.dummy third_party/boost/auto_.0 third_party/auto_.0

.PHONY: third_party/boost/boost_gen


.gen-files/third_party/boost/lib/libboost_atomic.a: .gen-obj/third_party/boost/.boost_gen.dummy


.gen-files/third_party/boost/lib/libboost_chrono.a: .gen-obj/third_party/boost/.boost_gen.dummy


.gen-files/third_party/boost/lib/libboost_context.a: .gen-obj/third_party/boost/.boost_gen.dummy


.gen-files/third_party/boost/lib/libboost_coroutine.a: .gen-obj/third_party/boost/.boost_gen.dummy


.gen-files/third_party/boost/lib/libboost_date_time.a: .gen-obj/third_party/boost/.boost_gen.dummy


.gen-files/third_party/boost/lib/libboost_exception.a: .gen-obj/third_party/boost/.boost_gen.dummy


.gen-files/third_party/boost/lib/libboost_filesystem.a: .gen-obj/third_party/boost/.boost_gen.dummy


.gen-files/third_party/boost/lib/libboost_graph.a: .gen-obj/third_party/boost/.boost_gen.dummy


.gen-files/third_party/boost/lib/libboost_iostreams.a: .gen-obj/third_party/boost/.boost_gen.dummy


.gen-files/third_party/boost/lib/libboost_log.a: .gen-obj/third_party/boost/.boost_gen.dummy


.gen-files/third_party/boost/lib/libboost_log_setup.a: .gen-obj/third_party/boost/.boost_gen.dummy


.gen-files/third_party/boost/lib/libboost_math_c99.a: .gen-obj/third_party/boost/.boost_gen.dummy


.gen-files/third_party/boost/lib/libboost_math_c99f.a: .gen-obj/third_party/boost/.boost_gen.dummy


.gen-files/third_party/boost/lib/libboost_math_c99l.a: .gen-obj/third_party/boost/.boost_gen.dummy


.gen-files/third_party/boost/lib/libboost_math_tr1.a: .gen-obj/third_party/boost/.boost_gen.dummy


.gen-files/third_party/boost/lib/libboost_math_tr1f.a: .gen-obj/third_party/boost/.boost_gen.dummy


.gen-files/third_party/boost/lib/libboost_math_tr1l.a: .gen-obj/third_party/boost/.boost_gen.dummy


.gen-files/third_party/boost/lib/libboost_prg_exec_monitor.a: .gen-obj/third_party/boost/.boost_gen.dummy


.gen-files/third_party/boost/lib/libboost_program_options.a: .gen-obj/third_party/boost/.boost_gen.dummy


.gen-files/third_party/boost/lib/libboost_python.a: .gen-obj/third_party/boost/.boost_gen.dummy


.gen-files/third_party/boost/lib/libboost_random.a: .gen-obj/third_party/boost/.boost_gen.dummy


.gen-files/third_party/boost/lib/libboost_regex.a: .gen-obj/third_party/boost/.boost_gen.dummy


.gen-files/third_party/boost/lib/libboost_serialization.a: .gen-obj/third_party/boost/.boost_gen.dummy


.gen-files/third_party/boost/lib/libboost_signals.a: .gen-obj/third_party/boost/.boost_gen.dummy


.gen-files/third_party/boost/lib/libboost_system.a: .gen-obj/third_party/boost/.boost_gen.dummy


.gen-files/third_party/boost/lib/libboost_test_exec_monitor.a: .gen-obj/third_party/boost/.boost_gen.dummy


.gen-files/third_party/boost/lib/libboost_thread.a: .gen-obj/third_party/boost/.boost_gen.dummy


.gen-files/third_party/boost/lib/libboost_timer.a: .gen-obj/third_party/boost/.boost_gen.dummy


.gen-files/third_party/boost/lib/libboost_unit_test_framework.a: .gen-obj/third_party/boost/.boost_gen.dummy


.gen-files/third_party/boost/lib/libboost_wave.a: .gen-obj/third_party/boost/.boost_gen.dummy


.gen-files/third_party/boost/lib/libboost_wserialization.a: .gen-obj/third_party/boost/.boost_gen.dummy

third_party/boost/boost_headers: third_party/boost/auto_.0 third_party/auto_.0

.PHONY: third_party/boost/boost_headers

third_party/boost/boost: third_party/boost/boost_gen third_party/boost/boost_headers third_party/boost/auto_.0 third_party/auto_.0

.PHONY: third_party/boost/boost


.gen-src/shakespeare: 
	@mkdir -p .gen-src; [ -f shakespeare ] || mkdir -p shakespeare; ln -f -s ../shakespeare .gen-src/shakespeare


.gen-src/shakespeare/.dummy: .gen-src/shakespeare
	@[ -f .gen-src/shakespeare/.dummy ] || touch .gen-src/shakespeare/.dummy


.gen-src/.gen-pkg/shakespeare: 
	@mkdir -p .gen-src/.gen-pkg; [ -f .gen-pkg/shakespeare ] || mkdir -p .gen-pkg/shakespeare; ln -f -s ../../.gen-pkg/shakespeare .gen-src/.gen-pkg/shakespeare


.gen-src/.gen-pkg/shakespeare/.dummy: .gen-src/.gen-pkg/shakespeare
	@[ -f .gen-src/.gen-pkg/shakespeare/.dummy ] || touch .gen-src/.gen-pkg/shakespeare/.dummy


.gen-src/.gen-files/shakespeare: 
	@mkdir -p .gen-src/.gen-files; [ -f .gen-files/shakespeare ] || mkdir -p .gen-files/shakespeare; ln -f -s ../../.gen-files/shakespeare .gen-src/.gen-files/shakespeare


.gen-src/.gen-files/shakespeare/.dummy: .gen-src/.gen-files/shakespeare
	@[ -f .gen-src/.gen-files/shakespeare/.dummy ] || touch .gen-src/.gen-files/shakespeare/.dummy

shakespeare/auto_.0: .gen-src/shakespeare .gen-src/.gen-pkg/shakespeare .gen-src/.gen-files/shakespeare

.PHONY: shakespeare/auto_.0

headers.shakespeare/file_tokenizer := shakespeare/file_tokenizer.h


.gen-obj/shakespeare/file_tokenizer.cc.o: .gen-src/common/.dummy .gen-src/.gen-files/common/.dummy .gen-src/.gen-pkg/common/.dummy $(headers.common/third_party/google/gflags/gflags) .gen-obj/common/third_party/google/glog/.glog_gen.0.dummy .gen-obj/common/third_party/google/glog/.glog_gen.1.0.dummy $(headers.common/log/log) $(headers.common/file/linereader) .gen-obj/third_party/boost/.boost_gen.dummy .gen-src/third_party/.dummy .gen-src/.gen-files/third_party/.dummy .gen-src/.gen-pkg/third_party/.dummy .gen-src/boost/.dummy .gen-src/.gen-files/boost/.dummy .gen-src/.gen-pkg/boost/.dummy .gen-src/shakespeare/.dummy .gen-src/.gen-files/shakespeare/.dummy .gen-src/.gen-pkg/shakespeare/.dummy $(headers.shakespeare/file_tokenizer) shakespeare/file_tokenizer.cc
	@mkdir -p .gen-obj/shakespeare
	@echo "Compiling:  shakespeare/file_tokenizer.cc (c++)"
	@$(COMPILE.cc) -I. -I.gen-files -I.gen-src -I.gen-src/.gen-files -Icommon/third_party/google/glog/src $(cxx_header_compile_args.common/third_party/google/gflags/gflags) shakespeare/file_tokenizer.cc -o .gen-obj/shakespeare/file_tokenizer.cc.o

shakespeare/file_tokenizer: .gen-obj/shakespeare/file_tokenizer.cc.o common/file/linereader third_party/boost/boost shakespeare/auto_.0

.PHONY: shakespeare/file_tokenizer

headers.common/util/stl := common/util/stl.h

common/util/stl: common/auto_.0

.PHONY: common/util/stl

headers.shakespeare/word_freq_map := shakespeare/word_freq_map.h

shakespeare/word_freq_map: common/util/stl shakespeare/auto_.0

.PHONY: shakespeare/word_freq_map


freq_compare: .gen-obj/shakespeare/freq_compare
	@ln -f -s .gen-obj/shakespeare/freq_compare freq_compare


bin/freq_compare: .gen-obj/shakespeare/freq_compare
	@mkdir -p bin
	@ln -f -s ../.gen-obj/shakespeare/freq_compare bin/freq_compare

shakespeare/freq_compare.0: shakespeare/auto_.0

.PHONY: shakespeare/freq_compare.0


.gen-obj/shakespeare/freq_compare.cc.o: .gen-src/common/.dummy .gen-src/.gen-files/common/.dummy .gen-src/.gen-pkg/common/.dummy $(headers.common/third_party/google/gflags/gflags) .gen-obj/common/third_party/google/gperftools/.perf_gen.0.dummy .gen-obj/common/third_party/google/gperftools/.perf_gen.1.0.dummy $(headers.common/third_party/google/gperftools/atomicops) $(headers.common/base/atomicops) $(headers.common/base/flags) .gen-obj/common/third_party/google/glog/.glog_gen.0.dummy .gen-obj/common/third_party/google/glog/.glog_gen.1.0.dummy $(headers.common/log/log) $(headers.common/third_party/google/init/init) $(headers.common/base/init) $(headers.common/base/macros) $(headers.common/base/mutex) $(headers.common/base/time) $(headers.common/base/types) $(headers.common/file/fileutil) $(headers.common/file/linereader) .gen-obj/third_party/boost/.boost_gen.dummy .gen-src/third_party/.dummy .gen-src/.gen-files/third_party/.dummy .gen-src/.gen-pkg/third_party/.dummy .gen-src/boost/.dummy .gen-src/.gen-files/boost/.dummy .gen-src/.gen-pkg/boost/.dummy .gen-src/shakespeare/.dummy .gen-src/.gen-files/shakespeare/.dummy .gen-src/.gen-pkg/shakespeare/.dummy $(headers.shakespeare/file_tokenizer) $(headers.common/util/stl) $(headers.shakespeare/word_freq_map) shakespeare/freq_compare.cc
	@mkdir -p .gen-obj/shakespeare
	@echo "Compiling:  shakespeare/freq_compare.cc (c++)"
	@$(COMPILE.cc) -I. -I.gen-files -I.gen-src -I.gen-src/.gen-files -Icommon/third_party/google/glog/src -Icommon/third_party/google/gperftools/src $(cxx_header_compile_args.common/third_party/google/gflags/gflags) shakespeare/freq_compare.cc -o .gen-obj/shakespeare/freq_compare.cc.o


.gen-obj/shakespeare/freq_compare: .gen-obj/common/third_party/google/gflags/src/gflags.cc.o .gen-obj/common/third_party/google/gflags/src/gflags_completions.cc.o .gen-obj/common/third_party/google/gflags/src/gflags_nc.cc.o .gen-obj/common/third_party/google/gflags/src/gflags_reporting.cc.o .gen-files/common/third_party/google/glog/lib/libglog.a .gen-obj/common/base/init.cc.o .gen-obj/common/base/time.cc.o .gen-files/common/third_party/google/gperftools/lib/libtcmalloc_and_profiler.a .gen-obj/common/file/fileutil.cc.o .gen-obj/common/file/linereader.cc.o .gen-files/third_party/boost/lib/libboost_atomic.a .gen-files/third_party/boost/lib/libboost_chrono.a .gen-files/third_party/boost/lib/libboost_context.a .gen-files/third_party/boost/lib/libboost_coroutine.a .gen-files/third_party/boost/lib/libboost_date_time.a .gen-files/third_party/boost/lib/libboost_exception.a .gen-files/third_party/boost/lib/libboost_filesystem.a .gen-files/third_party/boost/lib/libboost_graph.a .gen-files/third_party/boost/lib/libboost_iostreams.a .gen-files/third_party/boost/lib/libboost_log.a .gen-files/third_party/boost/lib/libboost_log_setup.a .gen-files/third_party/boost/lib/libboost_math_c99.a .gen-files/third_party/boost/lib/libboost_math_c99f.a .gen-files/third_party/boost/lib/libboost_math_c99l.a .gen-files/third_party/boost/lib/libboost_math_tr1.a .gen-files/third_party/boost/lib/libboost_math_tr1f.a .gen-files/third_party/boost/lib/libboost_math_tr1l.a .gen-files/third_party/boost/lib/libboost_prg_exec_monitor.a .gen-files/third_party/boost/lib/libboost_program_options.a .gen-files/third_party/boost/lib/libboost_python.a .gen-files/third_party/boost/lib/libboost_random.a .gen-files/third_party/boost/lib/libboost_regex.a .gen-files/third_party/boost/lib/libboost_serialization.a .gen-files/third_party/boost/lib/libboost_signals.a .gen-files/third_party/boost/lib/libboost_system.a .gen-files/third_party/boost/lib/libboost_test_exec_monitor.a .gen-files/third_party/boost/lib/libboost_thread.a .gen-files/third_party/boost/lib/libboost_timer.a .gen-files/third_party/boost/lib/libboost_unit_test_framework.a .gen-files/third_party/boost/lib/libboost_wave.a .gen-files/third_party/boost/lib/libboost_wserialization.a .gen-obj/shakespeare/file_tokenizer.cc.o .gen-obj/shakespeare/freq_compare.cc.o
	@echo "Linking:    .gen-obj/shakespeare/freq_compare"
	@$(LINK.cc)  .gen-obj/shakespeare/freq_compare.cc.o .gen-obj/shakespeare/file_tokenizer.cc.o .gen-files/third_party/boost/lib/libboost_wserialization.a .gen-files/third_party/boost/lib/libboost_wave.a .gen-files/third_party/boost/lib/libboost_unit_test_framework.a .gen-files/third_party/boost/lib/libboost_timer.a .gen-files/third_party/boost/lib/libboost_thread.a .gen-files/third_party/boost/lib/libboost_test_exec_monitor.a .gen-files/third_party/boost/lib/libboost_system.a .gen-files/third_party/boost/lib/libboost_signals.a .gen-files/third_party/boost/lib/libboost_serialization.a .gen-files/third_party/boost/lib/libboost_regex.a .gen-files/third_party/boost/lib/libboost_random.a .gen-files/third_party/boost/lib/libboost_python.a .gen-files/third_party/boost/lib/libboost_program_options.a .gen-files/third_party/boost/lib/libboost_prg_exec_monitor.a .gen-files/third_party/boost/lib/libboost_math_tr1l.a .gen-files/third_party/boost/lib/libboost_math_tr1f.a .gen-files/third_party/boost/lib/libboost_math_tr1.a .gen-files/third_party/boost/lib/libboost_math_c99l.a .gen-files/third_party/boost/lib/libboost_math_c99f.a .gen-files/third_party/boost/lib/libboost_math_c99.a .gen-files/third_party/boost/lib/libboost_log_setup.a .gen-files/third_party/boost/lib/libboost_log.a .gen-files/third_party/boost/lib/libboost_iostreams.a .gen-files/third_party/boost/lib/libboost_graph.a .gen-files/third_party/boost/lib/libboost_filesystem.a .gen-files/third_party/boost/lib/libboost_exception.a .gen-files/third_party/boost/lib/libboost_date_time.a .gen-files/third_party/boost/lib/libboost_coroutine.a .gen-files/third_party/boost/lib/libboost_context.a .gen-files/third_party/boost/lib/libboost_chrono.a .gen-files/third_party/boost/lib/libboost_atomic.a .gen-obj/common/file/linereader.cc.o .gen-obj/common/file/fileutil.cc.o $(LD_FORCE_LINK_START) .gen-files/common/third_party/google/gperftools/lib/libtcmalloc_and_profiler.a $(LD_FORCE_LINK_END) .gen-obj/common/base/time.cc.o .gen-obj/common/base/init.cc.o .gen-files/common/third_party/google/glog/lib/libglog.a .gen-obj/common/third_party/google/gflags/src/gflags_reporting.cc.o .gen-obj/common/third_party/google/gflags/src/gflags_nc.cc.o .gen-obj/common/third_party/google/gflags/src/gflags_completions.cc.o .gen-obj/common/third_party/google/gflags/src/gflags.cc.o -o .gen-obj/shakespeare/freq_compare

shakespeare/freq_compare: common/base/base common/file/fileutil shakespeare/file_tokenizer shakespeare/word_freq_map shakespeare/freq_compare.0 shakespeare/auto_.0

.PHONY: shakespeare/freq_compare


clean: 
	@rm -rf .gen-src/common/.dummy
	@rm -rf .gen-src/.gen-files/common/.dummy
	@rm -rf .gen-src/.gen-pkg/common/.dummy
	-@(mkdir -p .gen-files/common/third_party/google/gperftools; cd common/third_party/google/gperftools; GEN_DIR="../../../../.gen-files/common/third_party/google/gperftools" OBJ_DIR="../../../../.gen-obj/common/third_party/google/gperftools SRC_DIR="../../../../.gen-src/common/third_party/google/gperftools ROOT_DIR="$(ROOT_DIR)"  CXX_GCC="$(CXX_GCC)" CC_GCC="$(CC_GCC)" CC="$(CC)" CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" BASIC_CXXFLAGS="$(BASIC_CXXFLAGS)" CFLAGS="$(CFLAGS)" BASIC_CFLAGS="$(BASIC_CFLAGS)" LDFLAGS="$(LDFLAGS)" MAKE="$(MAKE)" GFLAGS_OBJS=".gen-obj/common/third_party/google/gflags/src/*.o" GFLAGS_SRC_ROOT="common/third_party/google/gflags/src"  eval '($$MAKE DESTDIR=$$(pwd)/$$GEN_DIR clean > /dev/null 2>&1 || echo -n "")' > ../../../../.gen-files/common/third_party/google/gperftools/.perf_gen.1.0.logfile 2>&1 || (cat ../../../../.gen-files/common/third_party/google/gperftools/.perf_gen.1.0.logfile; exit 1) )
	-@(mkdir -p .gen-files/common/third_party/google/glog; cd common/third_party/google/glog; GEN_DIR="../../../../.gen-files/common/third_party/google/glog" OBJ_DIR="../../../../.gen-obj/common/third_party/google/glog SRC_DIR="../../../../.gen-src/common/third_party/google/glog ROOT_DIR="$(ROOT_DIR)"  CXX_GCC="$(CXX_GCC)" CC_GCC="$(CC_GCC)" CC="$(CC)" CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" BASIC_CXXFLAGS="$(BASIC_CXXFLAGS)" CFLAGS="$(CFLAGS)" BASIC_CFLAGS="$(BASIC_CFLAGS)" LDFLAGS="$(LDFLAGS)" MAKE="$(MAKE)" GFLAGS_OBJS=".gen-obj/common/third_party/google/gflags/src/*.o" GFLAGS_SRC_ROOT="common/third_party/google/gflags/src"  eval '($$MAKE DESTDIR=$$(pwd)/$$GEN_DIR clean > /dev/null 2>&1 || echo -n "")' > ../../../../.gen-files/common/third_party/google/glog/.glog_gen.1.0.logfile 2>&1 || (cat ../../../../.gen-files/common/third_party/google/glog/.glog_gen.1.0.logfile; exit 1) )
	@rm -rf .gen-src/third_party/.dummy
	@rm -rf .gen-src/.gen-files/third_party/.dummy
	@rm -rf .gen-src/.gen-pkg/third_party/.dummy
	@rm -rf .gen-src/boost/.dummy
	@rm -rf .gen-src/.gen-files/boost/.dummy
	@rm -rf .gen-src/.gen-pkg/boost/.dummy
	-@(mkdir -p .gen-files/third_party/boost; cd third_party/boost; GEN_DIR="../../.gen-files/third_party/boost" OBJ_DIR="../../.gen-obj/third_party/boost SRC_DIR="../../.gen-src/third_party/boost ROOT_DIR="$(ROOT_DIR)"  CXX_GCC="$(CXX_GCC)" CC_GCC="$(CC_GCC)" CC="$(CC)" CXX="$(CXX)" CXXFLAGS="$(CXXFLAGS)" BASIC_CXXFLAGS="$(BASIC_CXXFLAGS)" CFLAGS="$(CFLAGS)" BASIC_CFLAGS="$(BASIC_CFLAGS)" LDFLAGS="$(LDFLAGS)" MAKE="$(MAKE)" BOOST_INCLUDEDIR="third_party/boost" BOOST_LIBDIR=".gen-files/third_party/boost/lib" BOOST_ROOT=".gen-files/third_party/boost"  eval '(./b2 clean)' > ../../.gen-files/third_party/boost/.boost_gen.logfile 2>&1 || (cat ../../.gen-files/third_party/boost/.boost_gen.logfile; exit 1) )
	@rm -rf .gen-src/shakespeare/.dummy
	@rm -rf .gen-src/.gen-files/shakespeare/.dummy
	@rm -rf .gen-src/.gen-pkg/shakespeare/.dummy
	@[ -L freq_compare ] && rm -f freq_compare || true
	@[ -L bin/freq_compare ] && rm -f bin/freq_compare || true
	@rm -rf .gen-obj
	@rm -rf bin
	@rm -rf .gen-files
	@rm -rf .gen-src
	@rm -rf .gen-pkg


all: freq_compare bin/freq_compare shakespeare/freq_compare


tests: 


.PHONY: clean all tests

.DEFAULT_GOAL=all

